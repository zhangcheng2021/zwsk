<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hsmap.yuezhihui.mapper.review.ReviewSpecialistMapper">
  <resultMap id="BaseResultMap" type="com.hsmap.yuezhihui.entity.review.ReviewSpecialist">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="group_id" jdbcType="INTEGER" property="groupId" />
    <result column="group_name" jdbcType="VARCHAR" property="groupName" />
    <result column="spec_id" jdbcType="INTEGER" property="specId" />
    <result column="spec_name" jdbcType="VARCHAR" property="specName" />
    <result column="product_count" jdbcType="INTEGER" property="productCount" />
    <result column="review_count" jdbcType="INTEGER" property="reviewCount" />
    <result column="status_" jdbcType="INTEGER" property="status" />
    <result column="is_del" jdbcType="INTEGER" property="isDel" />
    <result column="sort_" jdbcType="INTEGER" property="sort" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="remark_" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, group_id, group_name, spec_id, spec_name, product_count, review_count, status_,
    is_del, sort_, create_time, remark_
  </sql>
  <select id="selectByExample" parameterType="com.hsmap.yuezhihui.entity.review.ReviewSpecialistExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from review_specialist
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="pageNumber>0">
      limit ${(pageNumber-1)*pageSize},${pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from review_specialist
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from review_specialist
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hsmap.yuezhihui.entity.review.ReviewSpecialistExample">
    delete from review_specialist
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hsmap.yuezhihui.entity.review.ReviewSpecialist">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into review_specialist (group_id, group_name, spec_id,
      spec_name, product_count, review_count,
      status_, is_del, sort_,
      create_time, remark_)
    values (#{groupId,jdbcType=INTEGER}, #{groupName,jdbcType=VARCHAR}, #{specId,jdbcType=INTEGER},
      #{specName,jdbcType=VARCHAR}, #{productCount,jdbcType=INTEGER}, #{reviewCount,jdbcType=INTEGER},
      #{status,jdbcType=INTEGER}, #{isDel,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hsmap.yuezhihui.entity.review.ReviewSpecialist">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into review_specialist
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="groupId != null">
        group_id,
      </if>
      <if test="groupName != null">
        group_name,
      </if>
      <if test="specId != null">
        spec_id,
      </if>
      <if test="specName != null">
        spec_name,
      </if>
      <if test="productCount != null">
        product_count,
      </if>
      <if test="reviewCount != null">
        review_count,
      </if>
      <if test="status != null">
        status_,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
      <if test="sort != null">
        sort_,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="remark != null">
        remark_,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="groupId != null">
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="groupName != null">
        #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="specId != null">
        #{specId,jdbcType=INTEGER},
      </if>
      <if test="specName != null">
        #{specName,jdbcType=VARCHAR},
      </if>
      <if test="productCount != null">
        #{productCount,jdbcType=INTEGER},
      </if>
      <if test="reviewCount != null">
        #{reviewCount,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hsmap.yuezhihui.entity.review.ReviewSpecialistExample" resultType="java.lang.Long">
    select count(*) from review_specialist
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update review_specialist
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.groupId != null">
        group_id = #{record.groupId,jdbcType=INTEGER},
      </if>
      <if test="record.groupName != null">
        group_name = #{record.groupName,jdbcType=VARCHAR},
      </if>
      <if test="record.specId != null">
        spec_id = #{record.specId,jdbcType=INTEGER},
      </if>
      <if test="record.specName != null">
        spec_name = #{record.specName,jdbcType=VARCHAR},
      </if>
      <if test="record.productCount != null">
        product_count = #{record.productCount,jdbcType=INTEGER},
      </if>
      <if test="record.reviewCount != null">
        review_count = #{record.reviewCount,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status_ = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=INTEGER},
      </if>
      <if test="record.sort != null">
        sort_ = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null">
        remark_ = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update review_specialist
    set id = #{record.id,jdbcType=INTEGER},
      group_id = #{record.groupId,jdbcType=INTEGER},
      group_name = #{record.groupName,jdbcType=VARCHAR},
      spec_id = #{record.specId,jdbcType=INTEGER},
      spec_name = #{record.specName,jdbcType=VARCHAR},
      product_count = #{record.productCount,jdbcType=INTEGER},
      review_count = #{record.reviewCount,jdbcType=INTEGER},
      status_ = #{record.status,jdbcType=INTEGER},
      is_del = #{record.isDel,jdbcType=INTEGER},
      sort_ = #{record.sort,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      remark_ = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hsmap.yuezhihui.entity.review.ReviewSpecialist">
    update review_specialist
    <set>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="groupName != null">
        group_name = #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="specId != null">
        spec_id = #{specId,jdbcType=INTEGER},
      </if>
      <if test="specName != null">
        spec_name = #{specName,jdbcType=VARCHAR},
      </if>
      <if test="productCount != null">
        product_count = #{productCount,jdbcType=INTEGER},
      </if>
      <if test="reviewCount != null">
        review_count = #{reviewCount,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status_ = #{status,jdbcType=INTEGER},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        sort_ = #{sort,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark_ = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hsmap.yuezhihui.entity.review.ReviewSpecialist">
    update review_specialist
    set group_id = #{groupId,jdbcType=INTEGER},
      group_name = #{groupName,jdbcType=VARCHAR},
      spec_id = #{specId,jdbcType=INTEGER},
      spec_name = #{specName,jdbcType=VARCHAR},
      product_count = #{productCount,jdbcType=INTEGER},
      review_count = #{reviewCount,jdbcType=INTEGER},
      status_ = #{status,jdbcType=INTEGER},
      is_del = #{isDel,jdbcType=INTEGER},
      sort_ = #{sort,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      remark_ = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectAll" resultMap="BaseResultMap">
    select  a.id, a.group_id, c.name_ as group_name, a.spec_id, b.user_name as spec_name, a.product_count, a.review_count, a.status_,
    a.is_del, a.sort_, a.create_time, a.remark_
    from review_specialist a
    left join spec_info b on a.spec_id = b.id
    INNER join review_group c on a.group_id = c.id
    INNER JOIN review_batch rb on c.batch_id=rb.id
    where a.is_del = 0  and  ( rb.is_del = 0 and rb.status_ = 1 )  order by a.sort_ desc,a.id desc
  </select>
</mapper>
